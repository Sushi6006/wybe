======================================================================
AFTER EVERYTHING:
 Module func_typed
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : func_typed.plus<0>
  imports         : use wybe
  resources       : 
  known types     : bool: wybe.bool
                    char: wybe.char
                    float: wybe.float
                    int: wybe.int
                    phantom: wybe.phantom
                    string: wybe.string
  procs           : 

plus > public inline (0 calls)
0: plus(a#0:wybe.int, b#0:wybe.int, ?$#0:wybe.int): AliasPairs: []
    foreign llvm add(~a#0:wybe.int, ~b#0:wybe.int, ?$#0:wybe.int) @wybe:nn:nn

  LLVM code       :

; ModuleID = 'func_typed'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external ccc  i64 @"func_typed.plus<0>"(i64  %"a#0", i64  %"b#0")    {
entry:
  %"$#0" = add   i64 %"a#0", %"b#0" 
  ret i64 %"$#0" 
}
======================================================================
